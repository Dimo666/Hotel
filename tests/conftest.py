import json
import pytest
from sqlalchemy import insert
from httpx import AsyncClient

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è MODE)
from src.config import settings

# SQLAlchemy: –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –º–æ–¥–µ–ª–µ–π –∏ –¥–≤–∏–∂–æ–∫ –±–µ–∑ connection pool (NullPool –¥–ª—è —Ç–µ—Å—Ç–æ–≤)
from src.database import Base, engine_null_pool, async_session_maker_null_pool

# –ò–º–ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è FastAPI
from src.main import app

# –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π, —á—Ç–æ–±—ã Base.metadata —É–≤–∏–¥–µ–ª–∞ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
from src.models import *
from src.schemas.hotels import HotelAdd
from src.schemas.rooms import RoomAdd
from src.utils.db_manager import DBManager


# ‚õî –ó–∞—â–∏—Ç–∞: —Ç–µ—Å—Ç—ã –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ MODE=TEST
@pytest.fixture(scope="session", autouse=True)
def check_test_mode():
    assert settings.MODE == "TEST"


@pytest.fixture(scope="function")
async def db() -> DBManager:
    async with DBManager(session_factory=async_session_maker_null_pool) as db:
        yield db


# üõ† –§–∏–∫—Å—Ç—É—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: —É–¥–∞–ª—è–µ—Ç –∏ —Å–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—ã, –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
@pytest.fixture(scope="session", autouse=True)
async def setup_database(check_test_mode):
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ connection pool (NullPool –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤)
    async with engine_null_pool.begin() as conn:
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∞–º–∏ (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —á–∏—Å—Ç–∞—è –±–∞–∑–∞)
        await conn.run_sync(Base.metadata.drop_all)
        # –°–æ–∑–¥–∞—ë–º –∑–∞–Ω–æ–≤–æ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Å—Ö–µ–º–æ–π
        await conn.run_sync(Base.metadata.create_all)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∏–∫—Å—Ç—É—Ä–Ω—ã–µ (—Ç–µ—Å—Ç–æ–≤—ã–µ) –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–æ–≤
    with open("tests/mock_hotels.json", encoding="utf-8") as file_hotels:
        hotels = json.load(file_hotels)
    with open("tests/mock_rooms.json", encoding="utf-8") as file_rooms:
        rooms = json.load(file_rooms)

    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º —Å–ª–æ–≤–∞—Ä–∏ –≤ Pydantic-–º–æ–¥–µ–ª–∏ HotelAdd –∏ RoomAdd
    hotels = [HotelAdd.model_validate(hotel) for hotel in hotels]
    rooms = [RoomAdd.model_validate(room) for room in rooms]

    # –ß–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä –ë–î –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã
    async with DBManager(session_factory=async_session_maker_null_pool) as db_:
        await db_.hotels.add_bulk(hotels)  # –ú–∞—Å—Å–æ–≤–æ –¥–æ–±–∞–≤–ª—è–µ–º –æ—Ç–µ–ª–∏
        await db_.rooms.add_bulk(rooms)    # –ú–∞—Å—Å–æ–≤–æ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞
        await db_.commit()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è


@pytest.fixture(scope="session")
async def ac() -> AsyncClient:
    async with AsyncClient(app=app, base_url="http://test") as ac:
        yield ac


# üîê –§–∏–∫—Å—Ç—É—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —ç–Ω–¥–ø–æ–∏–Ω—Ç /auth/register
# –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î
@pytest.fixture(scope="session", autouse=True)
async def register_user(ac, setup_database):
    await ac.post(
        "/auth/register",
        json={
            "email": "kot@pes.com",
            "password": "1234"
        }
    )
