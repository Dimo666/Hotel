import json
import pytest
from sqlalchemy import insert
from httpx import AsyncClient

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è MODE)
from src.config import settings

# SQLAlchemy: –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –º–æ–¥–µ–ª–µ–π –∏ –¥–≤–∏–∂–æ–∫ –±–µ–∑ connection pool (NullPool –¥–ª—è —Ç–µ—Å—Ç–æ–≤)
from src.database import Base, engine_null_pool

# –ò–º–ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è FastAPI
from src.main import app

# –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π, —á—Ç–æ–±—ã Base.metadata —É–≤–∏–¥–µ–ª–∞ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
from src.models import *

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
from src.models.hotels import HotelsOrm
from src.models.rooms import RoomsOrm


# ‚õî –ó–∞—â–∏—Ç–∞: —Ç–µ—Å—Ç—ã –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ MODE=TEST
@pytest.fixture(scope="session", autouse=True)
def check_test_mode():
    assert settings.MODE == "TEST"


# üõ† –§–∏–∫—Å—Ç—É—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: —É–¥–∞–ª—è–µ—Ç –∏ —Å–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—ã, –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
@pytest.fixture(scope="session", autouse=True)
async def setup_database(check_test_mode):
    async with engine_null_pool.begin() as conn:
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∞–º–∏ (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —á–∏—Å—Ç–∞—è –±–∞–∑–∞)
        await conn.run_sync(Base.metadata.drop_all)

        # –°–æ–∑–¥–∞—ë–º –∑–∞–Ω–æ–≤–æ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
        await conn.run_sync(Base.metadata.create_all)

        # üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ mock_hotels.json –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É hotels
        with open("tests/mock_hotels.json", encoding="utf-8") as f:
            hotels_data = json.load(f)
        await conn.execute(insert(HotelsOrm), hotels_data)

        # üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ mock_rooms.json –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É rooms
        with open("tests/mock_rooms.json", encoding="utf-8") as f:
            rooms_data = json.load(f)
        await conn.execute(insert(RoomsOrm), rooms_data)


# üîê –§–∏–∫—Å—Ç—É—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —ç–Ω–¥–ø–æ–∏–Ω—Ç /auth/register
# –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î
@pytest.fixture(scope="session", autouse=True)
async def register_user(setup_database):
    async with AsyncClient(app=app, base_url="http://test") as ac:
        await ac.post(
            "/auth/register",
            json={
                "email": "kot@pes.com",
                "password": "1234"
            }
        )
