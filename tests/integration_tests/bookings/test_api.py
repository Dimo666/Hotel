# ‚úÖ –¢–µ—Å—Ç –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
import pytest
from tests.conftest import get_db_null_pool


# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—é: —Ç–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
@pytest.mark.parametrize("room_id, date_from, date_to, status_code", [
    # –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç-–∫–µ–π—Å
    (1, "2024-08-01", "2024-08-10", 200),  # –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç —É—Å–ø–µ—à–Ω–æ
    (1, "2024-08-02", "2024-08-11", 200),
    (1, "2024-08-03", "2024-08-12", 200),
    (1, "2024-08-04", "2024-08-13", 200),
    (1, "2024-08-05", "2024-08-14", 200),
    (1, "2024-08-06", "2024-08-15", 400),  # –û–∂–∏–¥–∞–µ–º –æ—à–∏–±–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –¥–∞—Ç)
    (1, "2024-08-17", "2024-08-25", 200),
])
async def test_add_booking(
        room_id, date_from, date_to, status_code,  # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ
        db, authenticated_ac                       # –§–∏–∫—Å—Ç—É—Ä—ã: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç /bookings
    # room_id = (await db.rooms.get_all())[0].id
    response = await authenticated_ac.post(
        "/bookings",
        json={
            "room_id": room_id,      # –ö–æ–º–Ω–∞—Ç–∞, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏–º –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
            "date_from": date_from,  # –ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            "date_to": date_to       # –ö–æ–Ω–µ—Ü –ø–µ—Ä–∏–æ–¥–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        }
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É
    assert response.status_code == status_code

    # –ï—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
    if status_code == 200:
        res = response.json()
        assert isinstance(res, dict)          # –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
        assert res["status"] == "OK"          # –û–∂–∏–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å OK
        assert "data" in res                  # –î–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏


# –§–∏–∫—Å—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—á–∏—â–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∞–º–∏
@pytest.fixture(scope="module")
async def delete_all_bookings():
    async for _db in get_db_null_pool():       # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–∞–∑—ã –∏–∑ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
        await _db.bookings.delete()            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ delete –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —É–¥–∞–ª—è–µ—Ç –≤—Å—ë)
        await _db.commit()                     # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è


# –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å—Ç—ë—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@pytest.mark.parametrize("room_id, date_from, date_to, booked_rooms", [
    (1, "2024-08-01", "2024-08-10", 1),
    (1, "2024-08-02", "2024-08-11", 2),
    (1, "2024-08-03", "2024-08-12", 3),
])
async def test_add_and_get_my_bookings(
    room_id,
    date_from,
    date_to,
    booked_rooms,
    delete_all_bookings,    # –û—á–∏—â–∞–µ–º –ë–î –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º
    authenticated_ac,       # –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
):
    # ‚ûï –°–æ–∑–¥–∞—ë–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    response = await authenticated_ac.post(
        "/bookings",
        json={
            "room_id": room_id,
            "date_from": date_from,
            "date_to": date_to,
        }
    )
    assert response.status_code == 200

    # üîç –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
    response_my_bookings = await authenticated_ac.get("/bookings/me")
    assert response_my_bookings.status_code == 200
    # ‚ùó –û—à–∏–±–∫–∞ —Ç—É—Ç: —Ç—ã —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—à—å `len(response.json())`, –Ω–æ `json()` ‚Äî —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å
    # –ù—É–∂–Ω–æ —Ç–∞–∫:
    data = response_my_bookings.json()
    assert isinstance(data, dict)
    assert "data" in data
    assert len(data["data"]) == booked_rooms  # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
